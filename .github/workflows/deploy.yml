name: Deploy to IIS

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build
        run: |
          dotnet restore
          dotnet build --configuration Release

      - name: Deploy
        run: |
          $ErrorActionPreference = 'Stop'
          $websiteName = 'ServiceManagerApi'
          $publishPath = 'C:\inetpub\wwwroot\ServiceManagerApi'
          $iisSiteName = 'SmWebApid'
          $iisAppPoolName = 'SmWebApiPool'
          
      - name: Stop the website
        run: Start-Process powershell -Verb RunAs -ArgumentList "Stop-WebSite -Name $iisSiteName"
          
      - name: Remove the existing app from IIS
        run: Start-Process powershell -Verb RunAs -ArgumentList 'Remove-WebApplication -Name $websiteName -Site $iisSiteName -ErrorAction Stop'
          
      - name: Delete the existing files from the website folder  
        run: Get-ChildItem "C:\inetpub\wwwroot\ServiceManagerApi" -Exclude ['web.config', 'appsettings.json'] -Recurse | Remove-Item -Recurse -Force
      
      - name: Publish the app
#        run: dotnet publish -c Release -o $publishPath
        run: |  
          # Create a new app pool if it doesn't exist
          if (-not (Test-WebAppPool -Name $iisAppPoolName -ErrorAction SilentlyContinue)) {
            New-WebAppPool -Name $iisAppPoolName
          }
          
          # Create a new website
          New-WebSite -Name $websiteName -Port 80 -PhysicalPath "C:\inetpub\wwwroot\$websiteName" -ApplicationPool $iisAppPoolName
          
          # Add the new app to IIS
          New-WebApplication -Name $websiteName -Site $iisSiteName -PhysicalPath $publishPath -ApplicationPool $iisAppPoolName -ErrorAction Stop
          
          # Start the website
          Start-WebSite -Name $iisSiteName
